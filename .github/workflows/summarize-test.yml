# SPDX-FileCopyrightText: Nextcloud contributors
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Summarization test

on:
  pull_request:
  push:
    branches:
      - main
      - stable*

concurrency:
  group: summarize-test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  APP_NAME: llm

jobs:
  transcription:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        include:
          - php-version: '8.0'
            server-version: 'stable27'
          - php-version: '8.3'
            server-version: 'master'

    name: Test summarize command on ${{ matrix.server-version }} php@${{ matrix.php-version }}

    services:
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
      postgres:
        image: postgres
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-version }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Set up php ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_mysql, pdo_sqlite, pgsql, pdo_pgsql, gd, zip

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          path: apps/${{ env.APP_NAME }}

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.1
        id: versions
        with:
          path: apps/${{ env.APP_NAME }}
          fallbackNode: '^16'
          fallbackNpm: '^8'

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Install app
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          make all
          composer install --no-dev
          sudo apt install python3

      - name: Set up Nextcloud and install app
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --admin-user admin --admin-pass password
          ./occ app:enable -vvv -f ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Download models
        run: |
          ./occ llm:download-model llama-2

      - name: Run transcription
        run: |
          ./occ llm:summarize "$(cat $(pwd)/apps/${{env.APP_NAME}}/tests/fixtures/input.txt)" > output.txt

      - name: Show log on failure
        if: failure()
        run: |
          tail data/nextcloud.log
          diff $(pwd)/apps/${{env.APP_NAME}}/tests/fixtures/summarize.txt output.txt


      - name: Check transcript
        run: |
          tail data/nextcloud.log
          diff $(pwd)/apps/${{env.APP_NAME}}/tests/fixtures/summarize.txt output.txt
